{"ast":null,"code":"var _jsxFileName = \"/home/othmay/repos/TarayahWorld/src/context/PlanetsContext.js\";\nimport React, { createContext, useState, useReducer } from 'react';\nexport const PlanetsContext = createContext();\nexport const planetReducer = (planetsTab, action) => {\n  switch (action.type) {\n    case 'switchPlanetToggle':\n      for (let i = 0; i < planetsTab.length; i++) {\n        if (planetsTab[i] === action.index) {\n          planetsTab[i].planetToggle = true;\n          console.log(i + ' is true');\n        } else {\n          planetsTab[i].planetToggle = false;\n          console.log(i + ' is false');\n        }\n      }\n\n      ;\n      return planetsTab;\n  }\n};\n\nconst PlanetsContextProvider = props => {\n  const [planetsTab, dispatch] = useReducer(planetReducer, [{\n    number: 'planet1',\n    planetToggle: false,\n    infoToggle: false\n  }, {\n    number: 'planet2',\n    planetToggle: false,\n    infoToggle: false\n  }, {\n    number: 'planet3',\n    planetToggle: false,\n    infoToggle: false\n  }, {\n    number: 'planet4',\n    planetToggle: false,\n    infoToggle: false\n  }, {\n    number: 'planet5',\n    planetToggle: false,\n    infoToggle: false\n  }, {\n    number: 'planet6',\n    planetToggle: false,\n    infoToggle: false\n  }]);\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: {\n      planetsTab,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default PlanetsContextProvider;","map":{"version":3,"sources":["/home/othmay/repos/TarayahWorld/src/context/PlanetsContext.js"],"names":["React","createContext","useState","useReducer","PlanetsContext","planetReducer","planetsTab","action","type","i","length","index","planetToggle","console","log","PlanetsContextProvider","props","dispatch","number","infoToggle","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,UAAxC,QAAyD,OAAzD;AAEA,OAAO,MAAMC,cAAc,GAAGH,aAAa,EAApC;AAEP,OAAO,MAAMI,aAAa,GAAG,CAACC,UAAD,EAAaC,MAAb,KAAwB;AACnD,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,oBAAL;AACC,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,UAAU,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACjB,YAAGH,UAAU,CAACG,CAAD,CAAV,KAAkBF,MAAM,CAACI,KAA5B,EACA;AAACL,UAAAA,UAAU,CAACG,CAAD,CAAV,CAAcG,YAAd,GAA6B,IAA7B;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,GAAG,UAAhB;AAA4B,SAFR,MAIpB;AAACH,UAAAA,UAAU,CAACG,CAAD,CAAV,CAAcG,YAAd,GAA6B,KAA7B;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,GAAG,WAAhB;AAA6B;AAChB;;AAAA;AACf,aAAOH,UAAP;AAVD;AAYA,CAbK;;AAeN,MAAMS,sBAAsB,GAAIC,KAAD,IAAW;AAE1C,QAAM,CAACV,UAAD,EAAaW,QAAb,IAAyBd,UAAU,CAACE,aAAD,EAAgB,CAC1C;AAACa,IAAAA,MAAM,EAAC,SAAR;AAAmBN,IAAAA,YAAY,EAAC,KAAhC;AAAuCO,IAAAA,UAAU,EAAC;AAAlD,GAD0C,EAE1C;AAACD,IAAAA,MAAM,EAAC,SAAR;AAAmBN,IAAAA,YAAY,EAAC,KAAhC;AAAuCO,IAAAA,UAAU,EAAC;AAAlD,GAF0C,EAG1C;AAACD,IAAAA,MAAM,EAAC,SAAR;AAAmBN,IAAAA,YAAY,EAAC,KAAhC;AAAuCO,IAAAA,UAAU,EAAC;AAAlD,GAH0C,EAI1C;AAACD,IAAAA,MAAM,EAAC,SAAR;AAAmBN,IAAAA,YAAY,EAAC,KAAhC;AAAuCO,IAAAA,UAAU,EAAC;AAAlD,GAJ0C,EAK1C;AAACD,IAAAA,MAAM,EAAC,SAAR;AAAmBN,IAAAA,YAAY,EAAC,KAAhC;AAAuCO,IAAAA,UAAU,EAAC;AAAlD,GAL0C,EAM1C;AAACD,IAAAA,MAAM,EAAC,SAAR;AAAmBN,IAAAA,YAAY,EAAC,KAAhC;AAAuCO,IAAAA,UAAU,EAAC;AAAlD,GAN0C,CAAhB,CAAzC;AASA,sBACC,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACb,MAAAA,UAAD;AAAaW,MAAAA;AAAb,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,KAAK,CAACI,QADP,CADD;AAKA,CAhBA;;AAiBD,eAAeL,sBAAf","sourcesContent":["import React, {createContext, useState, useReducer} from 'react';\n\nexport const PlanetsContext = createContext();\n\nexport const planetReducer = (planetsTab, action) => {\n\t\tswitch(action.type){\n\t\t\tcase 'switchPlanetToggle':\n\t\t\t\tfor(let i=0; i<planetsTab.length; i++){\n                      \t\t\tif(planetsTab[i] === action.index) \n                      \t\t\t{planetsTab[i].planetToggle = true\n\t\t\t\t\tconsole.log(i + ' is true')}\n                      \t\t\telse\n\t\t\t\t\t{planetsTab[i].planetToggle = false\n\t\t\t\t\tconsole.log(i + ' is false')}\n              \t\t\t};\n\t\t\treturn planetsTab;\n\t\t}\n\t}\n\n\tconst PlanetsContextProvider = (props) => {\n\n\tconst [planetsTab, dispatch] = useReducer(planetReducer, [\n                {number:'planet1', planetToggle:false, infoToggle:false},\n                {number:'planet2', planetToggle:false, infoToggle:false},\n                {number:'planet3', planetToggle:false, infoToggle:false},\n                {number:'planet4', planetToggle:false, infoToggle:false},\n                {number:'planet5', planetToggle:false, infoToggle:false},\n                {number:'planet6', planetToggle:false, infoToggle:false}\n        ]);\n\n\treturn (\n\t\t<PlanetsContext.Provider value={{planetsTab, dispatch}}>\n\t\t{props.children}\n\t\t</PlanetsContext.Provider>\n\t);\n};\nexport default PlanetsContextProvider\n"]},"metadata":{},"sourceType":"module"}