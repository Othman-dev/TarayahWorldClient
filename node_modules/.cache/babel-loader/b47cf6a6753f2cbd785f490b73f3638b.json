{"ast":null,"code":"var _jsxFileName = \"/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js\";\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js'; //----------firebase extractor\n\nfunction useData() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const unsuscribe = firebase.firestore().collection('planets').onSnapshot(snapshot => {\n      const newData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setData(newData);\n    });\n    return () => unsuscribe();\n  }, []);\n  return data;\n} //----------ScreenPlanet component, itself\n\n\nconst ScreenPlanet = props => {\n  const planet = props.planet;\n  const dataLocal = useData();\n  const screenDivClasses = classNames('screen', {\n    flex: planet.infoToggle\n  }, {\n    opacityOff: planet.infoToggle\n  });\n  const screenContent = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  });\n  console.log(dataLocal.filter(data => data.category === planet.id).pop());\n  console.log(planet);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: screenDivClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, screenContent);\n};\n\nexport default ScreenPlanet;","map":{"version":3,"sources":["/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js"],"names":["React","useEffect","useState","classNames","firebase","useData","data","setData","unsuscribe","firestore","collection","onSnapshot","snapshot","newData","docs","map","doc","id","ScreenPlanet","props","planet","dataLocal","screenDivClasses","flex","infoToggle","opacityOff","screenContent","console","log","filter","category","pop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AAEA,SAASC,OAAT,GAAmB;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAGJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,EAClBC,UADkB,CACNC,QAAD,IAAc;AACxB,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC5CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADoC;AAE5C,WAAGD,GAAG,CAACV,IAAJ;AAFyC,OAAV,CAAlB,CAAhB;AAIFC,MAAAA,OAAO,CAACM,OAAD,CAAP;AACC,KAPkB,CAAnB;AAQA,WAAO,MAAML,UAAU,EAAvB;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOF,IAAP;AACD,C,CAED;;;AAEA,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AAEA,QAAMC,SAAS,GAAGhB,OAAO,EAAzB;AAEH,QAAMiB,gBAAgB,GAAInB,UAAU,CACnC,QADmC,EAEnC;AAACoB,IAAAA,IAAI,EAACH,MAAM,CAACI;AAAb,GAFmC,EAGnC;AAACC,IAAAA,UAAU,EAACL,MAAM,CAACI;AAAnB,GAHmC,CAApC;AAMG,QAAME,aAAa,gBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC;AAKJC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACQ,MAAV,CAAiBvB,IAAI,IAAIA,IAAI,CAACwB,QAAL,KAAkBV,MAAM,CAACH,EAAlD,EAAsDc,GAAtD,EAAZ;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEC,sBACC;AAAK,IAAA,SAAS,EAAEE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,aADH,CADD;AAKA,CAzBD;;AA0BA,eAAeR,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js';\n\n//----------firebase extractor\n\nfunction useData() {\n\n\t\tconst [data, setData] = useState([])\n\n\t\tuseEffect(() => {\n\t\t\t\tconst unsuscribe = firebase.firestore().collection('planets')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\t\tconst newData = snapshot.docs.map((doc) => ({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data()\n\t\t\t\t\t\t}))\n\t\t\t\tsetData(newData)\n\t\t\t\t})\n\t\t\t\treturn () => unsuscribe()\n\t\t}, [])\n\t\treturn data\n}\n\n//----------ScreenPlanet component, itself\n\nconst ScreenPlanet = (props) => {\n\t\n    const planet = props.planet\n\n    const dataLocal = useData()\n\n\tconst screenDivClasses = (classNames(\n\t\t'screen',\n\t\t{flex:planet.infoToggle},\n\t\t{opacityOff:planet.infoToggle}\n\t))\n\n    const screenContent = (\n\t\t\t<div>\n\t\t\t</div>\n\t)\n\nconsole.log(dataLocal.filter(data => data.category === planet.id).pop())\nconsole.log(planet)\n\n\treturn (\n\t\t<div className={screenDivClasses}>\n\t\t\t\t{screenContent}\n\t\t</div>\n\t)\n}\nexport default ScreenPlanet;\n"]},"metadata":{},"sourceType":"module"}