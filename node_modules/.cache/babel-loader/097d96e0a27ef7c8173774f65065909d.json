{"ast":null,"code":"var _jsxFileName = \"/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js\";\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js'; //----------firebase extractor\n\nfunction useData() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const unsuscribe = firebase.firestore().collection('planets').onSnapshot(snapshot => {\n      const newData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setData(newData);\n    });\n    return () => unsuscribe();\n  }, []);\n  return data;\n} //----------ScreenPlanet component, itself\n\n\nconst ScreenPlanet = props => {\n  const planet = props.planet;\n  const dataLocal = useData().filter(data => data.category === planet.id).pop();\n  const screenDivClasses = classNames('screen', {\n    flex: planet.infoToggle\n  }, {\n    opacityOff: planet.infoToggle\n  });\n  console.log(dataLocal);\n  console.log(planet);\n\n  if (dataLocal === undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: screenDivClasses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    }, \"'error loading the page'\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(dataLocal.category, {\n      dataLocal: dataLocal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }));\n  }\n};\n\nexport default ScreenPlanet;","map":{"version":3,"sources":["/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js"],"names":["React","useEffect","useState","classNames","firebase","useData","data","setData","unsuscribe","firestore","collection","onSnapshot","snapshot","newData","docs","map","doc","id","ScreenPlanet","props","planet","dataLocal","filter","category","pop","screenDivClasses","flex","infoToggle","opacityOff","console","log","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AAEA,SAASC,OAAT,GAAmB;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAGJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,EAClBC,UADkB,CACNC,QAAD,IAAc;AACxB,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC5CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADoC;AAE5C,WAAGD,GAAG,CAACV,IAAJ;AAFyC,OAAV,CAAlB,CAAhB;AAIFC,MAAAA,OAAO,CAACM,OAAD,CAAP;AACC,KAPkB,CAAnB;AAQA,WAAO,MAAML,UAAU,EAAvB;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOF,IAAP;AACD,C,CAED;;;AAEA,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AAEA,QAAMC,SAAS,GACjBhB,OAAO,GAAGiB,MAAV,CAAiBhB,IAAI,IAAIA,IAAI,CAACiB,QAAL,KAAkBH,MAAM,CAACH,EAAlD,EAAsDO,GAAtD,EADE;AAIH,QAAMC,gBAAgB,GAAItB,UAAU,CACnC,QADmC,EAEnC;AAACuB,IAAAA,IAAI,EAACN,MAAM,CAACO;AAAb,GAFmC,EAGnC;AAACC,IAAAA,UAAU,EAACR,MAAM,CAACO;AAAnB,GAHmC,CAApC;AAODE,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AAEC,MAAGC,SAAS,KAAKU,SAAjB,EACC;AAAC,wBAAQ;AAAK,MAAA,SAAS,EAAEN,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAR;AAA0E,GAD5E,MAEQ;AAAC,wBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,SAAS,EAAEJ,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADQ;AAIP;AACF,CAzBD;;AA0BA,eAAeH,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js';\n\n//----------firebase extractor\n\nfunction useData() {\n\n\t\tconst [data, setData] = useState([])\n\n\t\tuseEffect(() => {\n\t\t\t\tconst unsuscribe = firebase.firestore().collection('planets')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\t\tconst newData = snapshot.docs.map((doc) => ({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data()\n\t\t\t\t\t\t}))\n\t\t\t\tsetData(newData)\n\t\t\t\t})\n\t\t\t\treturn () => unsuscribe()\n\t\t}, [])\n\t\treturn data\n}\n\n//----------ScreenPlanet component, itself\n\nconst ScreenPlanet = (props) => {\n\t\n    const planet = props.planet\n\n    const dataLocal = (\n\t\tuseData().filter(data => data.category === planet.id).pop()\n\t)\n\n\tconst screenDivClasses = (classNames(\n\t\t'screen',\n\t\t{flex:planet.infoToggle},\n\t\t{opacityOff:planet.infoToggle}\n\t))\n\n\nconsole.log(dataLocal)\nconsole.log(planet)\n\n\tif(dataLocal === undefined)\t\n\t\t{return (<div className={screenDivClasses}>'error loading the page'</div>)}\n    else {return (\n\t\t<div>\n\t\t\t\t<dataLocal.category dataLocal={dataLocal}/>\n\t\t</div>\n\t)}\n}\nexport default ScreenPlanet;\n"]},"metadata":{},"sourceType":"module"}