{"ast":null,"code":"var _jsxFileName = \"/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js\";\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js'; //----------firebase extractor\n\nfunction useData() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const unsuscribe = firebase.firestore().collection('planets').onSnapshot(snapshot => {\n      const newData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setData(newData);\n    });\n    return () => unsuscribe();\n  }, []);\n  return data;\n} //----------ScreenPlanet component, itself\n\n\nconst ScreenPlanet = props => {\n  const dataLocal = useData().filter(data => data.category === planet.id).pop();\n  const planet = props.planet;\n  const screenDivClasses = classNames('screen', {\n    flex: planet.infoToggle\n  }, {\n    opacityOff: planet.infoToggle\n  });\n\n  const screen = () => dataLocal === undefined ? 'Error loading the page' : dataLocal.category + dataLocal.title;\n\n  console.log(dataLocal);\n  console.log(planet);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: screenDivClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, screen);\n};\n\nexport default ScreenPlanet;","map":{"version":3,"sources":["/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js"],"names":["React","useEffect","useState","classNames","firebase","useData","data","setData","unsuscribe","firestore","collection","onSnapshot","snapshot","newData","docs","map","doc","id","ScreenPlanet","props","dataLocal","filter","category","planet","pop","screenDivClasses","flex","infoToggle","opacityOff","screen","undefined","title","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AAEA,SAASC,OAAT,GAAmB;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAGJ,QAAQ,CAACK,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,EAClBC,UADkB,CACNC,QAAD,IAAc;AACxB,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC5CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADoC;AAE5C,WAAGD,GAAG,CAACV,IAAJ;AAFyC,OAAV,CAAlB,CAAhB;AAIFC,MAAAA,OAAO,CAACM,OAAD,CAAP;AACC,KAPkB,CAAnB;AAQA,WAAO,MAAML,UAAU,EAAvB;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOF,IAAP;AACD,C,CAED;;;AAEA,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMC,SAAS,GAAGf,OAAO,GAAGgB,MAAV,CAAiBf,IAAI,IAAIA,IAAI,CAACgB,QAAL,KAAkBC,MAAM,CAACN,EAAlD,EAAsDO,GAAtD,EAAlB;AAEA,QAAMD,MAAM,GAAGJ,KAAK,CAACI,MAArB;AAEH,QAAME,gBAAgB,GAAItB,UAAU,CACnC,QADmC,EAEnC;AAACuB,IAAAA,IAAI,EAACH,MAAM,CAACI;AAAb,GAFmC,EAGnC;AAACC,IAAAA,UAAU,EAACL,MAAM,CAACI;AAAnB,GAHmC,CAApC;;AAMA,QAAME,MAAM,GAAG,MACdT,SAAS,KAAKU,SAAd,GACA,wBADA,GAGCV,SAAS,CAACE,QAAV,GACDF,SAAS,CAACW,KALX;;AAQCC,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAED,sBAEC;AAAK,IAAA,SAAS,EAAEE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,MADD,CAFD;AAOA,CA9BD;;AA+BA,eAAeX,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js';\n\n//----------firebase extractor\n\nfunction useData() {\n\n\t\tconst [data, setData] = useState([])\n\n\t\tuseEffect(() => {\n\t\t\t\tconst unsuscribe = firebase.firestore().collection('planets')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\t\tconst newData = snapshot.docs.map((doc) => ({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data()\n\t\t\t\t\t\t}))\n\t\t\t\tsetData(newData)\n\t\t\t\t})\n\t\t\t\treturn () => unsuscribe()\n\t\t}, [])\n\t\treturn data\n}\n\n//----------ScreenPlanet component, itself\n\nconst ScreenPlanet = (props) => {\n\n    const dataLocal = useData().filter(data => data.category === planet.id).pop()\n\n    const planet = props.planet\n\n\tconst screenDivClasses = (classNames(\n\t\t'screen',\n\t\t{flex:planet.infoToggle},\n\t\t{opacityOff:planet.infoToggle}\n\t))\n\n\tconst screen = () => (\n\t\tdataLocal === undefined ? \n\t\t'Error loading the page'\n\t\t:\t\n\t\t(dataLocal.category +\n\t\tdataLocal.title)\n    )\n\n\t\tconsole.log(dataLocal)\n\t\tconsole.log(planet)\n\n\treturn (\n\t\n\t\t<div className={screenDivClasses}>\n\t\t{screen}\n\t\t</div>\n\t\n\t)\n}\nexport default ScreenPlanet;\n"]},"metadata":{},"sourceType":"module"}