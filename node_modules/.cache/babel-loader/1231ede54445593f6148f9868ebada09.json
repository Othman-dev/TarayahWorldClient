{"ast":null,"code":"var _jsxFileName = \"/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js\";\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js'; //----------firebase extractor\n\nfunction useData() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    firebase.firestore().collection('planets').onSnapshot(snapshot => {\n      const newData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setData(newData);\n    });\n  }, []);\n  return data;\n} //----------ScreenPlanet component, itself\n\n\nconst ScreenPlanet = props => {\n  const data = useData();\n  const planet = props.planet;\n  const dataLocal = data.filter(data => data.category === planet.id).shift();\n  const screenDivClasses = classNames('screen', {\n    flex: planet.infoToggle\n  }, {\n    opacityOff: planet.infoToggle\n  });\n  const screen = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 3\n    }\n  }, \"//\", dataLocal.category, \"//\", dataLocal.title);\n  const test = [];\n  useEffect(() => {\n    firebase.firestore().collection('planets').onSnapshot(snapshot => {\n      snapshot.docs.map(doc => test.push(doc));\n    });\n  }, []);\n  console.log(dataLocal);\n  console.log(planet);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: screenDivClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }\n  }, screen);\n};\n\nexport default ScreenPlanet;","map":{"version":3,"sources":["/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js"],"names":["React","useEffect","useState","classNames","firebase","useData","data","setData","firestore","collection","onSnapshot","snapshot","newData","docs","map","doc","id","ScreenPlanet","props","planet","dataLocal","filter","category","shift","screenDivClasses","flex","infoToggle","opacityOff","screen","title","test","push","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AAEA,SAASC,OAAT,GAAmB;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ,CAACI,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,EACCC,UADD,CACaC,QAAD,IAAc;AACxB,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC5CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADoC;AAE5C,WAAGD,GAAG,CAACT,IAAJ;AAFyC,OAAV,CAAlB,CAAhB;AAIFC,MAAAA,OAAO,CAACK,OAAD,CAAP;AACC,KAPD;AAQD,GATQ,EASN,EATM,CAAT;AAUA,SAAON,IAAP;AACD,C,CAED;;;AAEA,MAAMW,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMZ,IAAI,GAAGD,OAAO,EAApB;AACH,QAAMc,MAAM,GAAGD,KAAK,CAACC,MAArB;AAEG,QAAMC,SAAS,GACjBd,IAAI,CAACe,MAAL,CAAYf,IAAI,IAAIA,IAAI,CAACgB,QAAL,KAAkBH,MAAM,CAACH,EAA7C,EAAiDO,KAAjD,EADE;AAKH,QAAMC,gBAAgB,GAAIrB,UAAU,CACnC,QADmC,EAEnC;AAACsB,IAAAA,IAAI,EAACN,MAAM,CAACO;AAAb,GAFmC,EAGnC;AAACC,IAAAA,UAAU,EAACR,MAAM,CAACO;AAAnB,GAHmC,CAApC;AAMA,QAAME,MAAM,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGR,SAAS,CAACE,QADb,QAEGF,SAAS,CAACS,KAFb,CADD;AAOC,QAAMC,IAAI,GAAG,EAAb;AACA7B,EAAAA,SAAS,CAAC,MAAM;AAChBG,IAAAA,QAAQ,CAACI,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,EAA2CC,UAA3C,CAAuDC,QAAD,IAAa;AACnEA,MAAAA,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIe,IAAI,CAACC,IAAL,CAAUhB,GAAV,CAAzB;AACC,KAFD;AAGC,GAJQ,EAIN,EAJM,CAAT;AAKAiB,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACD,sBAEC;AAAK,IAAA,SAAS,EAAEK,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,MADD,CAFD;AAOA,CAtCD;;AAuCA,eAAeX,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js';\n\n//----------firebase extractor\n\nfunction useData() {\n\n\t\tconst [data, setData] = useState([])\n\n\t\tuseEffect(() => {\n\t\t\t\tfirebase.firestore().collection('planets')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\t\tconst newData = snapshot.docs.map((doc) => ({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data()\n\t\t\t\t\t\t}))\n\t\t\t\tsetData(newData)\n\t\t\t\t})\n\t\t}, [])\n\t\treturn data\n}\n\n//----------ScreenPlanet component, itself\n\nconst ScreenPlanet = (props) => {\n\n    const data = useData()\n\tconst planet = props.planet\n\n    const dataLocal = (\n\t\tdata.filter(data => data.category === planet.id).shift()\n\t)\n\n\n\tconst screenDivClasses = (classNames(\n\t\t'screen',\n\t\t{flex:planet.infoToggle},\n\t\t{opacityOff:planet.infoToggle}\n\t))\n\n\tconst screen = (\n\t\t<div>\n\t\t//{dataLocal.category}\n\t\t//{dataLocal.title}\n\t\t</div>\n\t)\n\n\t\tconst test = []\n\t\tuseEffect(() => {\n\t\tfirebase.firestore().collection('planets').onSnapshot((snapshot) =>{\n\t\tsnapshot.docs.map(doc => test.push(doc))\n\t\t} )\n\t\t}, [])\t\t\n\t\tconsole.log(dataLocal)\n\t\tconsole.log(planet)\n\treturn (\n\t\n\t\t<div className={screenDivClasses}>\n\t\t{screen}\n\t\t</div>\n\t\n\t)\n}\nexport default ScreenPlanet;\n"]},"metadata":{},"sourceType":"module"}