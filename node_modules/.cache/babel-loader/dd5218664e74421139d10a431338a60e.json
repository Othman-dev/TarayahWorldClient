{"ast":null,"code":"var _jsxFileName = \"/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js\";\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js';\nimport ScreenOn from './ScreenOn.js'; //----------firebase extractor\n\nfunction useData() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const unsuscribe = firebase.firestore().collection('planets').onSnapshot(snapshot => {\n      const newData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setData(newData);\n    });\n    return () => unsuscribe();\n  }, []);\n  return data;\n} //----------ScreenPlanet component, itself\n\n\nconst ScreenPlanet = props => {\n  const data = useData();\n  const planet = props.planet;\n  const dataLocal = data.filter(data => data.category === planet.id).pop();\n  const screenDivClasses = classNames('screen', {\n    flex: planet.infoToggle\n  }, {\n    opacityOff: planet.infoToggle\n  });\n\n  const screen = () => {\n    {\n      dataLocal.category;\n    }\n    {\n      datalocal.title;\n    }\n  };\n\n  if (dataLocal === undefined) {\n    return;\n\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, \"'Error loading the page'\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: screenDivClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, screen);\n};\n\nexport default ScreenPlanet;","map":{"version":3,"sources":["/home/othmay/repos/TarayahWorld/src/components/Planets/ScreenPlanet.js"],"names":["React","useEffect","useState","classNames","firebase","ScreenOn","useData","data","setData","unsuscribe","firestore","collection","onSnapshot","snapshot","newData","docs","map","doc","id","ScreenPlanet","props","planet","dataLocal","filter","category","pop","screenDivClasses","flex","infoToggle","opacityOff","screen","datalocal","title","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,eAArB,C,CAEA;;AAEA,SAASC,OAAT,GAAmB;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAGL,QAAQ,CAACM,SAAT,GAAqBC,UAArB,CAAgC,SAAhC,EAClBC,UADkB,CACNC,QAAD,IAAc;AACxB,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAmBC,GAAD,KAAU;AAC5CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADoC;AAE5C,WAAGD,GAAG,CAACV,IAAJ;AAFyC,OAAV,CAAlB,CAAhB;AAIFC,MAAAA,OAAO,CAACM,OAAD,CAAP;AACC,KAPkB,CAAnB;AAQA,WAAO,MAAML,UAAU,EAAvB;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOF,IAAP;AACD,C,CAED;;;AAEA,MAAMY,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAMb,IAAI,GAAGD,OAAO,EAApB;AAEA,QAAMe,MAAM,GAAGD,KAAK,CAACC,MAArB;AAEA,QAAMC,SAAS,GACjBf,IAAI,CAACgB,MAAL,CAAYhB,IAAI,IAAIA,IAAI,CAACiB,QAAL,KAAkBH,MAAM,CAACH,EAA7C,EAAiDO,GAAjD,EADE;AAKH,QAAMC,gBAAgB,GAAIvB,UAAU,CACnC,QADmC,EAEnC;AAACwB,IAAAA,IAAI,EAACN,MAAM,CAACO;AAAb,GAFmC,EAGnC;AAACC,IAAAA,UAAU,EAACR,MAAM,CAACO;AAAnB,GAHmC,CAApC;;AAMA,QAAME,MAAM,GAAG,MAAM;AACnB;AAACR,MAAAA,SAAS,CAACE,QAAV;AAAmB;AACpB;AAACO,MAAAA,SAAS,CAACC,KAAV;AAAgB;AACf,GAHJ;;AAKG,MAAIV,SAAS,KAAKW,SAAlB,EAA4B;AAC9B;;AACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGE;;AACJ,sBAEC;AAAK,IAAA,SAAS,EAAEP,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,MADD,CAFD;AAMA,CAlCD;;AAmCA,eAAeX,YAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport classNames from 'classnames';\nimport firebase from '../../Firebase/firebase.js';\nimport ScreenOn from './ScreenOn.js';\n\n//----------firebase extractor\n\nfunction useData() {\n\n\t\tconst [data, setData] = useState([])\n\n\t\tuseEffect(() => {\n\t\t\t\tconst unsuscribe = firebase.firestore().collection('planets')\n\t\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\t\t\tconst newData = snapshot.docs.map((doc) => ({\n\t\t\t\t\t\tid: doc.id,\n\t\t\t\t\t\t...doc.data()\n\t\t\t\t\t\t}))\n\t\t\t\tsetData(newData)\n\t\t\t\t})\n\t\t\t\treturn () => unsuscribe()\n\t\t}, [])\n\t\treturn data\n}\n\n//----------ScreenPlanet component, itself\n\nconst ScreenPlanet = (props) => {\n\n    const data = useData()\n\t\n    const planet = props.planet\n\n    const dataLocal = (\n\t\tdata.filter(data => data.category === planet.id).pop()\n\t)\n\n\n\tconst screenDivClasses = (classNames(\n\t\t'screen',\n\t\t{flex:planet.infoToggle},\n\t\t{opacityOff:planet.infoToggle}\n\t))\n\n\tconst screen = () => {\n\t\t\t{dataLocal.category}\n\t\t\t{datalocal.title}\n    }\n\n    if (dataLocal === undefined){\n\t\treturn\n\t\t\t<div>\n\t\t\t\t'Error loading the page'\n\t\t\t</div>\n    }\n\treturn (\n\t\n\t\t<div className={screenDivClasses}>\n\t\t{screen}\n\t\t</div>\n\t)\n}\nexport default ScreenPlanet;\n"]},"metadata":{},"sourceType":"module"}